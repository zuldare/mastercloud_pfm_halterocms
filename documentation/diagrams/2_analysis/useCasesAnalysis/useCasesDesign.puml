@startuml
'left to right direction

boundary XView #skyblue
control YController #olive
entity ZEntities #orange


package Thymeleaf {
  entity "XTemplate <HTML templates>" as template #skyblue
  boundary "XStyle <CSS>" as css #skyblue
  control "XBean <Java Beans>" as javaBean #skyblue
}

package SpringBoot {

'  control "YResource <API REST>  HAY QUE BORRARLO" as apiRest #olive
  control "YApiController <RestController>" as apiController #olive
  control "YBusinessController <Service>" as service  #olive

  entity "ZModel <Java DTO>" as zModel #orange
  entity "ZDto <Java DTO>" as zDto #orange
  entity "ZDao <Repository>" as zDao #orange
  entity "ZEntity <Java Entity>" as zEntity #orange
}

database db <<MySQL>>
' PREGUNTAR A LUIS EL XQ PONERLO EN EL DIAGRAMA
' aÃ±adirle propiedades de la base de datos pass, users, database name
' pintar una request de entrada e
' pintar una response de salida


javaBean --> apiController
XView --right---> YController
YController ---right--> ZEntities

zDao -right--> db : "mysql:://10.X.X.X:puerto/database?user=XX?password=xxx"

apiController --> zModel

css <-left- template
template -right-> javaBean


XView <.... template : <<trace>>
XView <.... css : <<trace>>
XView <.... javaBean : <<trace>>



YController <.... apiController : <<trace>>
YController <.... service : <<trace>>

apiController -right--> service



XView -down-> zEntity
YController -> zEntity

zModel ..up.> zEntity : <<trace>>
zModel ..right.> zDto: <<trace>>
zEntity <-- zDto
zDao --> zEntity
service --> zDto

apiController --down-> zDto
service --> zDao
javaBean --> zModel

@enduml
