@startuml
left to right direction

actor Organizer as Organizer
actor Inscriber as Inscriber
actor Admin as Admin
actor Time as Time
actor TimeJudge as TimeJudge
actor Spectator as Spectator
actor CompetitionSecretary as CompetitionSecretary

package Admin_Management {
  usecase "Create/Modify club" as createClub
  usecase "Delete club" as deleteClub
  usecase "Manage clubs" as manageClubs

  usecase "Create/Modify organizer" as createOrganizer
  usecase "Delete organizer" as deleteOrganizer
  usecase "Manage organizers" as manageOrganizers

  usecase "Delete inscriber" as deleteInscriber
  usecase "Create/Modify inscriber" as createInscriber
  usecase "Manage inscribers" as manageInscribers

  usecase "Toggle category availability" as toggleCategory
  usecase "Delete category" as deleteCategory
  usecase "Create/Modify category" as createCategory
  usecase "Manage categories" as manageCategories
}

manageClubs --> createClub
manageClubs --> deleteClub
Admin --> manageClubs

manageOrganizers --> deleteOrganizer
manageOrganizers --> createOrganizer
Admin --> manageOrganizers

manageInscribers --> deleteInscriber
manageInscribers --> createInscriber
Admin --> manageInscribers

manageCategories --> deleteCategory
manageCategories --> createCategory
manageCategories --> toggleCategory
Admin --> manageCategories

package COMPETITION_BUROCRACY {
  usecase "Create/Modify competition" as createCompetition
  usecase "Delete competition" as deleteCompetition
  usecase "Manage competition" as manageCompetition

  usecase "setCompetitionType" as setCompetitionType
  usecase "Set competition date" as setCompetitionDate
  usecase "Set competition location" as setCompetitionLocation
  usecase "Set number of bounds" as setNumberOfBounds
  usecase "Set inscription period" as setInscriptionPeriod

  createCompetition --> setCompetitionDate
  createCompetition --> setInscriptionPeriod
  createCompetition --> setCompetitionLocation
  createCompetition --> setNumberOfBounds
  createCompetition --> setCompetitionType

  usecase "Toggle competition visibility data" as toggle
  usecase "Inscribe athlete" as inscribeAthlete
  usecase "Uninscribe athlete" as uninscribeAthlete

  usecase "Generate classification" as generateClassification
}

Organizer --> manageCompetition
Organizer --> toggle
manageCompetition --> deleteCompetition
manageCompetition --> createCompetition
Inscriber --> inscribeAthlete
Inscriber --> uninscribeAthlete
Organizer --> generateClassification

package BOUND {
  usecase "Create/Modify bound" as createBound
  usecase "Delete bound" as deleteBound
  usecase "Set date" as setBoundDate
  usecase "Set location" as setBoundLocation
  usecase "Set gender" as setGender
  usecase "Set number of platforms" as platformNumber

  createBound ---> setBoundLocation
  createBound ----> platformNumber
  createBound --> setBoundDate
  createBound ---> setGender

  usecase "Assign athlete to bound" as assignAthleteToBound
  usecase "Unassign athlete to bound" as unassignedAthleteToBound

  usecase "Pass weighin info to competition-secretary board" as weighToAct
  usecase "Write down athlete name" as writeDownAthleteName
  usecase "Write down athlete bodyweight" as writeDownAthleteBodyWeight
  usecase "Calculate athlete category" as calculateAthleteCategory
  usecase "Set lift status" as setLiftStatus
  usecase "Set lift value" as setLiftValue

  weighToAct --> writeDownAthleteName
  weighToAct --> writeDownAthleteBodyWeight
  weighToAct --> calculateAthleteCategory

}

Organizer --> createBound
Organizer --> assignAthleteToBound
Organizer --> unassignedAthleteToBound
Organizer --> deleteBound
CompetitionSecretary --> weighToAct
CompetitionSecretary --> setLiftStatus
CompetitionSecretary --> setLiftValue
CompetitionSecretary --> createBoundAct

package TIMER {
  usecase "Start timer" as startTimer
  usecase "Pause timer" as pauseTimer
  usecase "Resume timer" as resumeTimer
  usecase "Set timer duration" as setTimerDuration
  usecase "Stop timer" as stopTimer
}

TimeJudge --> startTimer
TimeJudge --> pauseTimer
TimeJudge --> resumeTimer
TimeJudge --> stopTimer
TimeJudge --> setTimerDuration
Time --> stopTimer

CompetitionSecretary ---> startTimer
CompetitionSecretary ---> pauseTimer
CompetitionSecretary ---> resumeTimer
CompetitionSecretary ---> stopTimer
CompetitionSecretary ---> setTimerDuration


package SPECTATOR_VIEW {
  usecase "Show competition inscription" as showCompetitionData
  usecase "Show bound inscriptions" as showBoundInscriptions
  usecase "Show bound weighins" as showBoundWeighins
  usecase "Show bound results" as showFinishedBoundsData
  usecase "Show live bound in play" as showLiveBoundInPlay
  usecase "Show results" as showResults
  usecase "Download results" as downloadResults
}
Spectator --> showCompetitionData
Spectator --> showBoundInscriptions
Spectator --> showBoundWeighins
Spectator --> showFinishedBoundsData
Spectator --> showLiveBoundInPlay
Spectator --> showResults
Spectator --> downloadResults
@enduml