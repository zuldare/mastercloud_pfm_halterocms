@startuml

''''''''''''''''''''''''''''''
''
'' STATES AND CHOICES
'' '' ''

state "Bar pending to be charged" as BarPendingToBeCharged
state "Bar charged" as ChargedBar 
state "Next and following lifters are announced" as NextAndFollowingLiftersAnnounced

state "Was there a change in the lift weight?" as ChangeInLiftWeightCHC <<choice>>
state "Does the lifter have any lift weight change attempt?" as AnyChangeAttemptCHC <<choice>>

state "The lifter lift weight change\nattempts decreased by 1" as AttemptsDecreased
state "Does the bar weight remain?" as BarWeightRemainsCHC <<choice>>
state "Does the lifter decide to perform its lift?" as IsLiftGoingToBeRejectedCHC <<choice>>

state "The timer started" as TimerStarted
state "Did the lifter perform its lift?" as WasLiftPerformedCHC <<choice>>
state "Was there a change in the lift weight?" as ChangeInLiftWeightAfterTimerCHC <<choice>>
state "Does the lifter have any lift weight change attempt?" as AnyChangeAttemptAfterTimerCHC <<choice>>

state "The lift was performed" as LiftWasPerformed
state "The timer stopped" as TimerStopped
state "Rejected lift" as RejectedLift

state "Was the lift valid?" as WasLiftValidCHC <<choice>>
state "Valid lift" as ValidLift
state "Null lift" as NullLift

''''''''''''''''''''''''''''''
''
'' TRANSITIONS
''

[*] --> BarPendingToBeCharged : Starts a new iteration\nwithin a round

BarPendingToBeCharged --> ChargedBar : The bar is charged with the\ncorresponding weight
ChargedBar --> NextAndFollowingLiftersAnnounced : The next and following\nlifters are announced

''
'' When lifters are announced:
''

NextAndFollowingLiftersAnnounced --> ChangeInLiftWeightCHC : Does the next lifter want to\nkeep the announced weight?
ChangeInLiftWeightCHC --> AnyChangeAttemptCHC : [No, the lifter tries to make\na lift weight change]\n\nDoes the lifter have more\nweight changes?
AnyChangeAttemptCHC --> IsLiftGoingToBeRejectedCHC : [No, the lifter has no more attempts\nat lift weight change]\n\nDoes the lifter decide to\nperform the lift?
AnyChangeAttemptCHC --> AttemptsDecreased : [Yes, the lifter still has any\nlift weight change attempt]

AttemptsDecreased --> BarWeightRemainsCHC : Does the weight of the\nbar change?
BarWeightRemainsCHC --> ChargedBar : [No, the bar weight remains]
BarWeightRemainsCHC --> BarPendingToBeCharged : [Yes, the bar weight changes]

ChangeInLiftWeightCHC --> IsLiftGoingToBeRejectedCHC : [Yes, the lifter keeps\nits lift weight]\n\nDoes the lifter decide to\nperform the lift?
IsLiftGoingToBeRejectedCHC --> TimerStarted : [Yes, the lifter decides to\nperform its lift]
IsLiftGoingToBeRejectedCHC --> RejectedLift : [No, the lifter rejected its lift]
RejectedLift --> [*] : The iteration\nends

''
'' When timer started:
''

TimerStarted --> WasLiftPerformedCHC : Is the lift performed after\nthe start of time?
WasLiftPerformedCHC --> LiftWasPerformed : [Yes, the lifter performed\nits lift]
WasLiftPerformedCHC --> TimerStopped : [No, the lifter didn't\nperform its lift]
WasLiftPerformedCHC --> ChangeInLiftWeightAfterTimerCHC : [No, but the lifter tries to make\na lift weight change]\n\nDoes it have time to make\na weight change?

ChangeInLiftWeightAfterTimerCHC --> WasLiftPerformedCHC : [No, the timer started more\nthan 30 seconds ago]
ChangeInLiftWeightAfterTimerCHC --> AnyChangeAttemptAfterTimerCHC : [Yes, the timer started less\nthan 30 seconds ago]\n\nDoes the lifter have more\nweight changes?

AnyChangeAttemptAfterTimerCHC --> WasLiftPerformedCHC : [No, the lifter has no more attempts\nat lift weight change]
AnyChangeAttemptAfterTimerCHC --> AttemptsDecreased : [Yes, the lifter still has any\nlift weight change attempt]

LiftWasPerformed --> TimerStopped : The rest of the time\npasses

''
'' When time is over:
''

TimerStopped --> WasLiftValidCHC : Was the lift valid?
WasLiftValidCHC --> ValidLift : [The lift was judged\nas valid]
WasLiftValidCHC --> NullLift : [The lift was judged\nas null]

ValidLift --> [*] : The iteration\nends
NullLift --> [*]: The iteration\nends

@enduml
